name: Android CI
on:
  push:
    branches: [ main ]
jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Build Environment
      run: |
        sudo apt-get update -y
        sudo apt-get install -y openjdk-17-jdk python3-pip autoconf libtool pkg-config zlib1g-dev libncurses5-dev
        python3 -m pip install --upgrade pip wheel setuptools
        pip3 install buildozer cython==0.29.36 pyjnius==1.6.1
    
    - name: Create buildozer.spec
      run: |
        cat > buildozer.spec << EOL
        [buildozer]
        log_level = 2
        
        [app]
        title = MyApp
        package.name = myapp
        package.domain = com.example
        source.dir = .
        source.include_exts = py,png,jpg,kv,atlas
        version = 1.0.0
        requirements = python3,kivy==2.1.0
        orientation = portrait
        android.api = 33
        android.minapi = 21
        android.sdk_build_tools = 34.0.0
        android.accept_sdk_license = True
        # שינויים קריטיים למטה!
        android.build_dir = ./build_dir
        bin_dir = ./output_bin
        EOL
        
        cat buildozer.spec
    
    - name: Build APK
      run: |
        buildozer -v android debug
        
        # חפש את קובץ ה-APK בכל התיקיות
        echo "=== Searching for APK files ==="
        find . -name "*.apk" -print
        
        # העתק את כל קבצי ה-APK לתיקייה סטנדרטית
        mkdir -p apk_output
        find . -name "*.apk" -exec cp {} apk_output/ \;
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: MyApp-debug
        path: apk_output/*.apk





